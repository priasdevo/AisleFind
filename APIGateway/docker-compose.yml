version: '3'

services:

  kong-database:
    container_name: AF-kong-database
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpassword
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "kong_data:/var/lib/postgresql/data"

  kong-migrations:
    container_name: AF-kong-migrations
    image: kong:latest
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpassword
    depends_on:
      kong-database:
        condition: service_healthy

  kong:
    container_name: AF-kong
    image: kong:latest
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpassword
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"    # Proxy
      - "8443:8443"    # Proxy (SSL)
      - "8001:8001"    # Admin API
      - "8444:8444"    # Admin API (SSL)
    depends_on:
      - kong-database
      - kong-migrations

  konga:
    container_name: AF-konga
    image: pantsel/konga:latest
    environment:
      TOKEN_SECRET: ${TOKEN_SECRET}
    ports:
      - "1337:1337"
    depends_on:
      - kong

volumes:
  kong_data:
